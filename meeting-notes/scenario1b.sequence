# test
Title: Scenario 1b:  Existing Patient schedules a service or procedure directly with their health care service\nA = End User, B = FHIR Client, C = FHIR Server

Note over A,B: functions handled by the App
Note over B,C: functions handled by the standard

A--B: 1. Open App (Optional Login to FHIR Client)
A-C: 2. (Login to FHIR Server)
A-B: 3. Select Patient, ***Service*** and When Available
Note left of A: Input Parameter:\n - Who (Patient)\n- When (Time Period)\n- What (Service or Procedure)\n-Why (Chief Complaint)\n-DEFER others\nPatient Demographic updates\nDetails trigger by Complaint\n Insurance\n(likely as a Questionnaire)
B--C: *Future Scope* POST Some operation $input
C--C: *Future Scope* Discover Appointment type
C--B: *Future Scope* Optionally return Questionnaire to be filled in
B--A: *Future Scope* Display input parameters
A--B: *Future Scope* fills out Questionnaire
B-C: 4. Appointment.$find based on End User Input
C-C: 5. (summary of Cooper's comments)\nAvailability search.\nServer needs to\na)***Interpret what actors service needs***\nb)and provide available times\nthat all actors are available
# Note right of C: Note: Server patient matching and \nchecking for conflicts \nmatters for other workflows \n(donâ€™t need the know \nthe patient for doing a appt search)
C-B: 6. Returns set of proposed Appointments
B-A: 7. Display set of proposed Appointments
A-B: 8. Select preferred Appointment
B-C: 9. POST Appointment (create vs update status?)
Note right of C: Appointment would be the same \nas the proposed Appointment\nIf any changes to Appointment \nthe Server will reject
C-C: 10. (summary of Cooper's comments)\n verify (again) that all actors \nare available and check for conflicts \n(double appointments)
C-B: 11. Return confirmation/Error
B-A: 12. Communicates Instructions, Logout
Note left of A: - Other Outcomes: \na) End User Doesn't Finish\nb) Cancels\nc) Amends Information\nd) Change Appointment\n e) No Appointments\n f) other
